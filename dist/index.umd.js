(function(n,r){typeof exports=="object"&&typeof module!="undefined"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(n=typeof globalThis!="undefined"?globalThis:n||self,r(n.MemoIframeIpc={}))})(this,function(n){"use strict";var p=Object.defineProperty;var f=(n,r,d)=>r in n?p(n,r,{enumerable:!0,configurable:!0,writable:!0,value:d}):n[r]=d;var c=(n,r,d)=>f(n,typeof r!="symbol"?r+"":r,d);var h=(n,r,d)=>new Promise((e,s)=>{var o=i=>{try{t(d.next(i))}catch(l){s(l)}},a=i=>{try{t(d.throw(i))}catch(l){s(l)}},t=i=>i.done?e(i.value):Promise.resolve(i.value).then(o,a);t((d=d.apply(n,r)).next())});class r{constructor(e){c(this,"windowMessageHandler",{});c(this,"messageHandler",{});c(this,"callbackId",1);c(this,"callbacks",{});c(this,"isIframe",!0);c(this,"source",{url:"",query:{}});c(this,"defaultOptions",{methods:["localStorage.removeItem","localStorage.setItem","localStorage.getItem","localStorage.clear","memoryStorage.removeItem","memoryStorage.setItem","memoryStorage.getItem","memoryStorage.clear","browser.windowPostMessage","browser.openChildWindow"],appId:"memo-app"});c(this,"options");c(this,"player",{play:()=>new Promise(e=>{var s;(s=this.browser)==null||s.windowPostMessage({type:"window:player:play:req",data:{}}),e()}),pause:()=>new Promise(e=>{var s;(s=this.browser)==null||s.windowPostMessage({type:"window:player:pause:req",data:{}}),e()})});this.options={methods:[...this.defaultOptions.methods,...e.methods||[]],appId:e.appId||this.defaultOptions.appId},this.init()}init(){this.source.url=window.location.href,this.source.query=this.getQueryParams(this.source.url),window.addEventListener("message",e=>{const{from:s,action:o,params:a}=e.data;if(s===`main:${this.options.appId}`){if(o==="IPC_RESPONSE_SEND")for(const t in this.windowMessageHandler)this.windowMessageHandler[t](a.event,a.data);if(o==="IPC_RESPONSE"){const{callbackId:t,success:i,params:l}=e.data;this.callbacks[t]&&(i?this.callbacks[t].success(l.data):this.callbacks[t].error(l.error),delete this.callbacks[t])}if(o==="IPC_RESPONSE_SEND_MESSAGE")for(const t in this.messageHandler)this.messageHandler[t](a.event,a.data)}}),this.addMethods(this.options.methods)}getQueryParams(e){const s={},o=e.match(/\?([^#]+)/);if(o){const t=o[1],i=new URLSearchParams(t);for(const[l,m]of i.entries())s[l]=m}const a=e.match(/#.*\?(.+)/);if(a){const t=a[1],i=new URLSearchParams(t);for(const[l,m]of i.entries())s[l]=m}return s}addMethod(e){const s=e.split(".");let o=this;for(let a=0;a<s.length-1;a++)o[s[a]]||(o[s[a]]={}),o=o[s[a]];o[s[s.length-1]]=(...a)=>new Promise((t,i)=>{this.callMain(e,a,t,i)})}addMethods(e){for(const s of e)this.addMethod(s)}callMain(e,s,o,a){this.callbackId++,this.callbacks[this.callbackId]={success:o,error:a},window.parent.postMessage({from:`renderer:${this.options.appId}`,action:"IPC_REQUEST",data:{callbackId:this.callbackId,method:e,params:s}},"*")}handleMessage(e,s){return h(this,null,function*(){this.messageHandler[s]=e})}removeHandler(e){return h(this,null,function*(){e&&this.messageHandler[e]&&delete this.messageHandler[e]})}handleWindowMessage(e,s){return h(this,null,function*(){this.windowMessageHandler[s]=e})}removeWindowHandler(e){return h(this,null,function*(){e&&this.windowMessageHandler[e]&&delete this.windowMessageHandler[e]})}}n.Bridge=r,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
